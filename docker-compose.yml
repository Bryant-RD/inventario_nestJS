services:
  # Servicio Backend (NestJS)
  backend:
    build: .
    image: inventory-backend:latest
    container_name: inventory-backend
    ports:
      - "4000:4000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=admin
      - DB_PASSWORD=admin
      - DB_DATABASE=inventory
      - PORT=4000
    depends_on:
      - postgres
      - postgres-exporter
    command: ["sh", "-c", "until nc -z postgres 5432; do echo waiting for db; sleep 2; done; node dist/main.js"]

  # PostgreSQL
  postgres:
    image: postgres:13
    container_name: inventory-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=inventory
    volumes:
      - pgdata:/var/lib/postgresql/data

  # Exporter de PostgreSQL
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://admin:admin@postgres:5432/inventory?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - postgres

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - backend
      - postgres-exporter

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  pgdata:
  prometheus_data:
  grafana_data:
